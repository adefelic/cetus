INCLUDE "src/constants/gfx_constants.inc"
IF !DEF(DEF_BG_TILE_INDICES)
DEF DEF_BG_TILE_INDICES EQU 1

;;;; tile ids for VRAM_BG_BLOCK
;

; bank 0, explore, encounter, pause
DEF TILE_COLOR_0                  EQU 0 ; unused
DEF TILE_UI_BORDER_EMPTY          EQU TILE_COLOR_0
DEF TILE_COLOR_1                  EQU 1
DEF TILE_EXPLORE_GROUND           EQU TILE_COLOR_1
DEF TILE_COLOR_2                  EQU 2
DEF TILE_EXPLORE_WALL             EQU TILE_COLOR_2
DEF TILE_COLOR_3                  EQU 3 ; unused
DEF TILE_EXPLORE_DIAG_R           EQU 4
DEF TILE_EXPLORE_DIAG_L           EQU 5
DEF TILE_GRASS_NEAR               EQU 6
DEF TILE_GRASS_FAR                EQU 7
DEF TILE_UI_BORDER_TL_CORNER      EQU 8
DEF TILE_UI_BORDER_HORIZONTAL     EQU 9
DEF TILE_UI_BORDER_BL_CORNER      EQU 10
DEF TILE_UI_BORDER_VERTICAL       EQU 11
DEF TILE_DISTANCE_FOG_LEFT_WALL   EQU 12
DEF TILE_DISTANCE_FOG_A           EQU 13
DEF TILE_DISTANCE_FOG_B           EQU 14
DEF TILE_DISTANCE_FOG_LEFT_CORNER EQU 15
DEF TILE_DISTANCE_FOG_GROUND      EQU 16
DEF TILE_EQUIPMENT_BORDER_TL      EQU 17 ; (only used for pause)

; bank 0, encounter. not dynamic! gets loaded in main :(
DEF TILES_ENV_BLOCK_LEFT          EQU 18
DEF TILES_ENV_BLOCK_RIGHT         EQU TILES_ENV_BLOCK_LEFT + ENC_ENV_BLOCK_TILE_SIZE

; bank 0, explore
DEF TILE_FIELD_WALL_B_WALL          EQU TILES_ENV_BLOCK_RIGHT + ENC_ENV_BLOCK_TILE_SIZE
DEF TILE_FIELD_WALL_B_DOOR          EQU TILE_FIELD_WALL_B_WALL + 1
DEF TILE_FIELD_WALL_B_SIDE_FAR_DIAG EQU TILE_FIELD_WALL_B_DOOR + 1

;;;; tile ids for VRAM_BOTH_BLOCK
;

DEF VRAM_BOTH_BLOCK_STARTING_ID EQU $80

; bank 0, encounter
DEF TILES_ENCOUNTER_NPC EQU VRAM_BOTH_BLOCK_STARTING_ID

; pause screen
; bank 0
DEF TILE_HEAD_ICON EQU VRAM_BOTH_BLOCK_STARTING_ID
DEF TILE_BODY_ICON EQU TILE_HEAD_ICON + EQUIPMENT_ICON_TILES
DEF TILE_LEGS_ICON EQU TILE_BODY_ICON + EQUIPMENT_ICON_TILES
DEF TILE_RING1_ICON EQU TILE_LEGS_ICON + EQUIPMENT_ICON_TILES
DEF TILE_RING2_ICON EQU TILE_RING1_ICON + EQUIPMENT_ICON_TILES
DEF TILE_RING3_ICON EQU TILE_RING2_ICON + EQUIPMENT_ICON_TILES
DEF TILE_WEAPON_ICON EQU TILE_RING3_ICON + EQUIPMENT_ICON_TILES
DEF TILE_ICON_ICON EQU TILE_WEAPON_ICON + EQUIPMENT_ICON_TILES

; bank 1
DEF TILE_PAPER_DOLL_HEAD EQU VRAM_BOTH_BLOCK_STARTING_ID
DEF TILE_PAPER_DOLL_BODY EQU TILE_PAPER_DOLL_HEAD + PAPER_DOLL_HEAD_TILES
DEF TILE_PAPER_DOLL_LEGS EQU TILE_PAPER_DOLL_BODY + PAPER_DOLL_BODY_TILES
DEF TILE_PAPER_DOLL_WEAPON EQU TILE_PAPER_DOLL_LEGS + PAPER_DOLL_LEGS_TILES


; full vram tile addresses for use in vblank handler
; todo standardize how this is done

; bank 0, encounter
DEF NPC_SPRITE_TILE_VRAM_ADDR EQU VRAM_BOTH_BLOCK
; bank 0, explore
DEF WALL_TILES_VRAM_ADDR EQU VRAM_BG_BLOCK + (TILE_FIELD_WALL_B_WALL * TILE_SIZE)
; bank 0, pause
DEF HEAD_ICON_VRAM_ADDR  EQU VRAM_BOTH_BLOCK + (TILE_HEAD_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF BODY_ICON_VRAM_ADDR  EQU VRAM_BOTH_BLOCK + (TILE_BODY_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF LEGS_ICON_VRAM_ADDR  EQU VRAM_BOTH_BLOCK + (TILE_LEGS_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF RING1_ICON_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_RING1_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF RING2_ICON_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_RING2_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF RING3_ICON_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_RING3_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF WEAPON_ICON_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_WEAPON_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF ICON_ICON_VRAM_ADDR  EQU VRAM_BOTH_BLOCK + (TILE_ICON_ICON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
; bank 1, pause
DEF PAPER_DOLL_HEAD_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_PAPER_DOLL_HEAD - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF PAPER_DOLL_BODY_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_PAPER_DOLL_BODY - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF PAPER_DOLL_LEGS_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_PAPER_DOLL_LEGS - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE
DEF PAPER_DOLL_WEAPON_VRAM_ADDR EQU VRAM_BOTH_BLOCK + (TILE_PAPER_DOLL_WEAPON - VRAM_BOTH_BLOCK_STARTING_ID) * TILE_SIZE

ENDC
